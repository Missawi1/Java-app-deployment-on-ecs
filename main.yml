name: Deploy Java Application with Tomcat to ECS

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy-image:
    runs-on: ubuntu-latest

    env:
      ECR_REPO_NAME: java-app
      IMAGE_NAME: java-app-image
      CONTAINER_NAME: java-app
      SERVICE_NAME: java-app-service
      CLUSTER_NAME: java-app-cluster

    steps:
    - uses: actions/checkout@v3

    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: '11'  # Replace with the appropriate Java version

    - name: Setup Maven
      uses: actions/setup-java@v1
      with:
        java-version: '11'  # Replace with the appropriate Java version
        maven-version: '3.8'  # Replace with the appropriate Maven version

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Java application with Maven
      run: mvn clean package

    - name: Build and tag Docker image
      run: |
        docker build -t ${{ env.IMAGE_NAME }}:${{ github.sha }} -f Dockerfile .
        docker tag ${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:${{ github.sha }}
    - name: Push Docker image to Amazon ECR
      run: |
        docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:${{ github.sha }}
        pwd
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
      with:
        task-definition: java-application-task-definition.json  # Replace with the path to your ECS task definition for Java with Tomcat
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:${{ github.sha }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.SERVICE_NAME }}
        cluster: ${{ env.CLUSTER_NAME }}
        wait-for-service-stability: true